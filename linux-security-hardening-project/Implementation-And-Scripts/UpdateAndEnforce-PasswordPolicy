1. Enforce Password Complexity: The password complexity settings are configured in /etc/security/pwquality.conf or in /etc/pam.d/common-password (depending on the Linux distribution).

	a. Open the PAM configuration file for editing:
	
		sudo vi  /etc/pam.d/common-password
		
	b. Locate the line containing pam_pwquality.so:
		• It might look like this (or similar):
			password requisite pam_pwquality.so retry=3
			
	c. Modify the line to enforce the required complexity: Update it with the following options:
		a. password requisite pam_pwquality.so retry=2 minlen=8 ucredit=-1 ocredit=-1

		• retry=2: Allows 2 retries to enter a valid password.
		• minlen=8: Requires a minimum of 8 characters.
		• ucredit=-1: Requires at least 1 uppercase letter.
		• ocredit=-1: Requires at least 1 special character (e.g., @, #, !).

	d. Save and exit the file
		
	2. Force All Users to Change Passwords on Next Login

		a. Expire Passwords for All Users: Run the following command to expire passwords for all users:
	
	Better to use this: force all users to change their passwords on the next login, while excluding root and system accounts, you can expire passwords for all non-system users using a combination of commands.
	
	for user in $(awk -F: '$3 >= 1000 && $3 != 65534 {print $1}' /etc/passwd); do
	    if [[ "$user" != "root" ]]; then
	        sudo passwd --expire "$user"
	        echo "Password expired for user: $user"
	    fi
	done
			
			Explanation:
				1. awk -F: '$3 >= 1000 && $3 != 65534 {print $1}' /etc/passwd:
					○ Extracts all usernames with a UID greater than or equal to 1000 (regular users).
					○ Excludes nobody (UID 65534), which is an internal OS account.
				2. passwd --expire "$user":
					○ Forces the password for the user to expire. The next login will prompt the user to change their password.
				3. if [[ "$user" != "root" ]]:
					○ Ensures the root account is excluded from the loop.
				4. Echo Statement:
					○ Prints confirmation for each user whose password was expired.
			
	

	3. Test the New Password Policy  
		a. passwd username

		• Enter a password that violates the rules (e.g., no special characters or uppercase letters). It should be rejected with an appropriate error message.
		• Enter a valid password that complies with the rules (e.g., P@ssword123). It should be accepted

	4. Verify the Configuration
		
		a. Check /etc/security/pwquality.conf: If your Linux system also uses /etc/security/pwquality.conf, ensure it has the following lines to reinforce the complexity settings:

			minlen = 8
			ucredit = -1
			ocredit = -1
			retry = 2
			
		a. Validate PAM Configuration: Use the following command to validate your PAM configuration:
	
			sudo pam-auth-update
			

	5. Monitor User Compliance: To ensure users are updating their passwords, monitor authentication logs:
		a. Check Password Change Logs: View logs to confirm that users are updating their passwords:
			i. sudo tail -f /var/log/auth.log
		b. List User Password Expiry: Use "chage" to verify password expiry for a specific user, Look for the "Password must be changed" field:
			i. sudo chage -l username

Example of a One-Time Script to implement above
	
#!/bin/bash

# Update password complexity in /etc/security/pwquality.conf
echo "Configuring password complexity..."
sudo sed -i '/pam_pwquality.so/d' /etc/pam.d/common-password
echo "password requisite pam_pwquality.so retry=2 minlen=8 ucredit=-1 ocredit=-1" | sudo tee -a /etc/pam.d/common-password

# Expire passwords for all users to force password updates
for user in $(awk -F: '$3 >= 1000 && $3 != 65534 {print $1}' /etc/passwd); do
    if [[ "$user" != "root" ]]; then
        sudo passwd --expire "$user"
        echo "Password expired for user: $user"
    fi
done
 echo "Password policy updated and all passwords expired. Users must set new passwords on next login."

Summary
	• Updated password complexity with pam_pwquality.so in /etc/pam.d/common-password.
	• Forced all users to update passwords with passwd -e.
	• Verified the changes by testing and monitoring authentication logs.
This ensures compliance with the new password policy.


Optional steps:

	A. Set system wide Password Expiration Policy or by user:  To ensure that passwords are updated regularly, set a password expiration policy in /etc/login.defs or by using the chage command for individual users.

	1. Edit /etc/login.defs
		a. sudo nano /etc/login.defs
	2. Update the following settings:
		PASS_MAX_DAYS   90
		PASS_MIN_DAYS   7
		PASS_WARN_AGE   14
		
			• PASS_MAX_DAYS: Sets the maximum number of days a password can be used before it must be changed (e.g., 90 days).
			• PASS_MIN_DAYS: Sets the minimum number of days between password changes (e.g., 7 days).
			• PASS_WARN_AGE: Warns the user 14 days before their password expires.
	3. Save and exit file


	4. For individual users change instead of system wide
		a. sudo chage -M 90 -m 7 -W 14 username

		• -M: Maximum days (90).
		• -m: Minimum days (7).
		• -W: Warn days (14).
		

	1. Restart Any Necessary Services: No need to restart the server, but ensure PAM-related services (e.g., SSH) are reloaded if needed:

		sudo systemctl reload sshd
